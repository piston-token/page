{"version":3,"sources":["assets/img/Telegram_logo.svg","App.tsx","reportWebVitals.ts","index.tsx"],"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_ref2","id","x1","x2","y1","y2","offset","stopColor","_ref3","cx","cy","r","fill","_ref4","d","_ref5","_ref6","SvgTelegramLogo","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","ForwardRef","window","chainIdExpected","styled","Paper","theme","typography","h3","padding","spacing","textAlign","color","palette","text","secondary","dataRefreshInterval","App","React","Component","constructor","super","state","radioValue","progress","walletAccepted","alreadyVoted","totalYES","totalNO","totalVotes","votingEnded","baseState","_stateInterval","componentDidMount","contractAddress","contract_abi","abi","checkState","clearInterval","setInterval","componentWillUnmount","connected","setState","yourAddress","walletAddress","farm_contract","methods","getWalletStatus","then","result","getUserAnswer","getTotalAnswers","resultYes","parseInt","resultNO","started","onClick_Telegram","location","href","onClick_Submit","openValue","toLowerCase","vote","send","from","response","catch","err","alert","handleRadioChange","event","_value","render","_jsxs","children","className","_jsx","src","style","marginTop","Button","fullWidth","variant","sx","my","marginRight","size","onClick","TelegramIcon","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","mode","primary","main","background","default","ReactDOM","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ac407ee5.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"a\",\n  x1: 0.667,\n  x2: 0.417,\n  y1: 0.167,\n  y2: 0.75\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0,\n  stopColor: \"#37aee2\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#1e96c8\"\n})), /*#__PURE__*/React.createElement(\"linearGradient\", {\n  id: \"b\",\n  x1: 0.66,\n  x2: 0.851,\n  y1: 0.437,\n  y2: 0.802\n}, /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 0,\n  stopColor: \"#eff7fc\"\n}), /*#__PURE__*/React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#fff\"\n})));\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 120,\n  cy: 120,\n  r: 120,\n  fill: \"url(#a)\"\n});\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#c8daea\",\n  d: \"M98 175c-3.888 0-3.227-1.468-4.568-5.17L82 132.207 170 80\"\n});\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#a9c9dd\",\n  d: \"M98 175c3 0 4.325-1.372 6-3l16-15.558-19.958-12.035\"\n});\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"url(#b)\",\n  d: \"M100.04 144.41l48.36 35.729c5.519 3.045 9.501 1.468 10.876-5.123l19.685-92.763c2.015-8.08-3.08-11.746-8.36-9.349l-115.59 44.571c-7.89 3.165-7.843 7.567-1.438 9.528l29.663 9.259 68.673-43.325c3.242-1.966 6.218-.91 3.776 1.258\"\n});\nfunction SvgTelegramLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 240 240\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTelegramLogo);\nexport default __webpack_public_path__ + \"static/media/Telegram_logo.28141391.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, CircularProgress, Grid, LinearProgress, Typography } from '@mui/material';\r\nimport { StandardTextFieldProps, TextField } from '@mui/material';\r\n\r\n\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { AbiItem, TransactionReceipt } from 'ethereum-abi-types-generator';\r\n\r\nimport {ContractContext} from './assets/abi/voting-contract';\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport copy from 'clipboard-copy';\r\nimport { formatEthFromWei, formatNumber } from './Formatters';\r\n\r\n//  Global setup Web3 Contract-Interaction\r\n//\r\nimport abi from \"./assets/abi/voting-contract.json\";\r\nimport TopAppBar from './components/AppBar';\r\nimport ConnectButton from './components/ConnectButton';\r\n\r\nimport taxMeterImg from './assets/img/tax-meter.png'\r\nimport {ReactComponent as TelegramIcon} from './assets/img/Telegram_logo.svg';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\n\r\n//const contractAddress: string = '0x6B4E65FB66F49655cBe8B4228319bB2c9E26aad8'; // release on mainnet\r\n//const contractAddress: string = '0x5372579dc14033a8B6Ed8aB4120781B33bBB711b'; // release on mainnet 2022\r\nconst contractAddress: string = '0x4af53af7784f1a67f72fd623EB0Ab8C79aDA3700'; // release on mainnet 2023\r\n\r\n//window.chainIdExpected = 97;\r\nwindow.chainIdExpected = 56;\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    dataRefreshInterval: number,\r\n    farm_contract: ContractContext;\r\n    web3: Web3;\r\n    walletConnectProvider: WalletConnectProvider,\r\n    ethereum: any;\r\n    contractAddress: string;\r\n    contract_abi: AbiItem[];\r\n    walletAddress: string;\r\n    connected: boolean;\r\n    refferalAddress: string; // the ref address that invited me\r\n    chainId: number;\r\n    chainIdExpected: number;\r\n    bnbPrice: number;\r\n  }\r\n}\r\n\r\ninterface AppProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.h3,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nwindow.dataRefreshInterval = 3000;\r\n\r\nclass App extends React.Component<AppProps> {\r\n  \r\n  state = {\r\n    radioValue: \"\",\r\n    progress: false,\r\n    walletAccepted: false,\r\n    alreadyVoted: false,\r\n    totalYES: 0,\r\n    totalNO: 0,\r\n    totalVotes: 0,\r\n    votingEnded: false\r\n  }\r\n\r\n  baseState: any;\r\n  _stateInterval: any;\r\n\r\n\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n\r\n    this.baseState = this.state;\r\n    // properties\r\n\r\n\r\n  }\r\n\r\n\r\n  componentDidMount = () => { \r\n    window.contractAddress = contractAddress;\r\n    window.contract_abi = abi as AbiItem[];\r\n\r\n\r\n    this.checkState();\r\n\r\n    if(this._stateInterval){\r\n      clearInterval(this._stateInterval);\r\n    }\r\n    this._stateInterval = setInterval(this.checkState, window.dataRefreshInterval);\r\n\r\n    //this.setModalOpen();\r\n  }\r\n\r\n\r\n  componentWillUnmount = () => { \r\n    \r\n  }\r\n\r\n  \r\n  checkState = () => {  \r\n\r\n    if(window.connected !== true){\r\n      this.setState(this.baseState);\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      yourAddress: window.walletAddress,\r\n    });\r\n\r\n    window.farm_contract.methods.getWalletStatus(window.walletAddress).call().then((result: boolean) => {\r\n      //console.log(result);\r\n      this.setState({\r\n        walletAccepted: result\r\n      });\r\n    });\r\n\r\n\r\n    window.farm_contract.methods.getUserAnswer(window.walletAddress).call().then((result: string) => {\r\n      //console.log(result);\r\n      this.setState({\r\n        alreadyVoted: result != \"0\"\r\n      });\r\n    });\r\n\r\n    window.farm_contract.methods.getTotalAnswers(\"1\").call().then((resultYes: string) => {\r\n      //console.log(result);\r\n      let totalYES = parseInt(resultYes);\r\n\r\n\r\n      window.farm_contract.methods.getTotalAnswers(\"2\").call().then((resultNO: string) => {\r\n        //console.log(result);\r\n        let totalNO = parseInt(resultNO);\r\n\r\n        this.setState({\r\n          totalYES: (100 / (totalYES + totalNO) * totalYES),\r\n          totalNO: (100 / (totalYES + totalNO) * totalNO),\r\n          totalVotes: totalYES + totalNO\r\n        });\r\n\r\n        window.farm_contract.methods.started().call().then((started: boolean) => {\r\n          //console.log(result);\r\n\r\n          if(started == false && (totalYES + totalNO) > 0){\r\n            this.setState({\r\n              votingEnded: true\r\n            });\r\n          }\r\n\r\n\r\n        });\r\n        \r\n      });\r\n    });\r\n\r\n\r\n  }\r\n\r\n  onClick_Telegram = () => {\r\n    window.location.href = \"https://t.me/PISTON_TOKEN\";\r\n  }\r\n\r\n  onClick_Submit = () => {\r\n    //alert(this.state.radioValue)\r\n    let openValue = \"\";\r\n    if(this.state.radioValue.toLowerCase() == \"op1\"){\r\n      openValue = \"1\";\r\n    }else if(this.state.radioValue.toLowerCase() == \"op2\"){\r\n      openValue = \"2\";\r\n    }\r\n\r\n    this.setState({\r\n      progress: true\r\n    });\r\n\r\n    window.farm_contract.methods.vote(openValue).send({from: window.walletAddress}).then((response) => {\r\n      this.setState({\r\n        progress: false\r\n      });\r\n    }).catch((err:any) => {\r\n      alert(\"transaction failed\");\r\n      this.setState({\r\n        progress: false\r\n      });\r\n    });\r\n  }\r\n\r\n  handleRadioChange = (event: any, _value: string) => {\r\n    this.setState({\r\n      radioValue: _value\r\n    })\r\n  }\r\n\r\n  //  Main Layout\r\n  //\r\n  render = () => {\r\n    return (\r\n      <div>\r\n      <div className={\"wrapper\"}>\r\n        <img className={\"logo\"} src={\"https://piston-token.com/images/logo.svg\"}/>\r\n        <h2>PISTON TOKEN</h2>\r\n        <h3>final claim</h3>\r\n\r\n\r\n\r\n      </div>\r\n  <a id=\"details\"></a>\r\n      <div className={\"wrapper left\"} style={{marginTop: \"16px\"}}>\r\n        11th November<br/><br/>\r\n      Greetings all! The time is finally here! 🤘🏼<br/>\r\nAs you all know, PSTN unfortunately came to an end. We ran a vote many months ago, and 81% of the community decided to invest the little liquidity that remained to gain profits and hopefully start giving back to all those that did not receive their original investment back. \r\n<br/><br/>\r\nOur first investment did not go well but we didn’t give up. A new opportunity arose, at a lower % but much safer so we decided to go with it and from there we’ve been doing very well.\r\nPlease remember that this is unprecedented, no other projects have done something like this, and we are proud to finally be at a stage where we can give back.\r\n<br/><br/>\r\nA new dapp has been created from which you will be able to withdraw $20 per day per wallet (only whitelisted wallets of course). Users will be able to do this until the claim pool reaches zero. We will continue to fill the pool ideally twice a month in increments of $500 for the foreseeable future. \r\n<br/><br/>\r\nThe target is to increase the injections with time as our investment continues to compound and grow.\r\n<br/><br/>\r\nThere are only TWO members of the original PSTN team left and we will NEVER DM you with links, wallet connect pages or other strange requests. Please always be careful and ensure you’re talking to the correct person by checking their username. The link for the site will be posted by ME on THIS group ONLY.\r\n<br/><br/>\r\nAs a token of appreciation for all those that stayed with us and believed we could pull this off, the first injection will be of $1000.\r\n<br/><br/>\r\nThis weekend we will be running tests on the dapp on testnet to ensure there are no issues and will hopefully deploy the dapp for you all on Monday or Tuesday if everything goes well.\r\n<br/><br/>\r\nThank you.\r\n      </div>\r\n\r\n      <Button fullWidth={true} variant={\"outlined\"} color={\"secondary\"} sx={{my: 1, marginRight: 1}} size=\"small\" onClick={this.onClick_Telegram}><TelegramIcon style={{height: \"30px\", marginRight: \"8px\"}}></TelegramIcon>Telegram</Button>     \r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport amber from '@mui/material/colors/amber'\r\n\r\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: '#FFFFFF',\r\n    },\r\n    secondary: {\r\n      main: '#193d7d',\r\n    },\r\n    background: {\r\n      default: \"#FFFFFF\"\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}