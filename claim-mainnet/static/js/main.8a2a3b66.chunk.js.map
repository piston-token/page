{"version":3,"sources":["assets/img/metamask.png","assets/img/trustwallet.png","components/ConnectButton.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ConnectButton","React","Component","constructor","props","super","state","WalletConnectSelectionDlgOpen","connected","networkWarning","baseState","componentDidMount","existingConnectionJSON","localStorage","getItem","existingConnection","JSON","parse","this","initialConnect_WalletConnect","window","ethereum","initialConnect","componentWillUnmount","async","chainId","chainIdExpected","setState","concat","walletConnectProvider","WalletConnectProvider","infuraId","rpc","enable","web3","Web3","accounts","eth","getAccounts","length","walletAddress","handleConnectWallet_WalletConnect","console","log","request","method","then","res","handleConnectWallet","confirm","a","document","createElement","target","href","click","networkVersion","updateRefLink","forceUpdate","farm_contract","Contract","contract_abi","contractAddress","handleDeactivateAccount","handleDeactivateAccount_WalletConnect","disconnect","setItem","refLinkWalledId","getElementById","innerText","handleWalletConnectDlgSelection","selection","handleWalletConnectDlgClose","onClick_connect","onClick_disconnect","render","button","_jsxs","Button","fullWidth","variant","color","sx","my","marginRight","size","onClick","children","_jsx","PowerOffIcon","style","height","PowerIcon","walletConnectPreSelectDlg","Dialog","onClose","open","List","p","ListItem","autoFocus","ListItemAvatar","src","metamaskLogo","width","ListItemText","primaryTypographyProps","fontSize","primary","trustwalletLogo","Box","Grid","container","item","xs","md","padding","slice","componentWillReceiveProps","styled","Paper","_ref","theme","typography","h3","spacing","textAlign","palette","text","secondary","dataRefreshInterval","App","radioValue","progress","contractBalance","alreadyClaimed","voterBalance","lastAction","lastActionTxt","claimButtonDisabled","lastClaimMinutesAgo","claimButtonDisabledBecauseCooldown","_stateInterval","abi","checkState","clearInterval","setInterval","yourAddress","methods","getContractBalance","call","result","utils","fromWei","voterBalances","lastClaimDate","Date","parseInt","now","getTime","toFixed","catch","err","voterClaims","ex","onClick_Submit","openValue","toLowerCase","claim","send","from","response","alert","onClick_AddMe","setVoterBalances","toWei","handleRadioChange","event","_value","className","display","disabled","marginTop","SendIcon","border","borderRadius","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","darkTheme","createTheme","mode","main","background","default","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.8a2a3b66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/metamask.55d59196.png\";","export default __webpack_public_path__ + \"static/media/trustwallet.8de17c9e.png\";","import React from 'react';\r\nimport { Button, Box, Grid } from \"@mui/material\";\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport {ContractContext} from '../assets/abi/voting-contract';\r\nimport PowerIcon from '@mui/icons-material/Power';\r\nimport PowerOffIcon from '@mui/icons-material/PowerOff';\r\nimport { StringMappingType } from 'typescript';\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\n\r\nimport walletConnectLogo from \"../assets/img/walletconnect.png\";\r\nimport metamaskLogo from \"../assets/img/metamask.png\"\r\nimport trustwalletLogo from \"../assets/img/trustwallet.png\"\r\n\r\n\r\n\r\ninterface ConnectButtonProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nclass ConnectButton extends React.Component<ConnectButtonProps> {\r\n \r\n  state = {\r\n    WalletConnectSelectionDlgOpen: false,\r\n    connected: false,\r\n    networkWarning: \"\"\r\n  }\r\n  baseState: any;\r\n  constructor(props: ConnectButtonProps) {\r\n      super(props);\r\n      this.baseState = this.state;\r\n  }\r\n\r\n  componentDidMount = () => { \r\n      //this.handleConnectWallet();\r\n      //this.handleConnectWallet_WalletConnect();\r\n      \r\n      try{\r\n        let existingConnectionJSON = localStorage.getItem(\"walletconnect\");\r\n        // walletconnect\r\n        if(existingConnectionJSON){\r\n          let existingConnection = false;\r\n          try{\r\n            let conn = JSON.parse(existingConnectionJSON);\r\n            existingConnection = conn.connected;\r\n          }catch{\r\n            existingConnection = false;\r\n          }\r\n          if(existingConnection){\r\n            this.initialConnect_WalletConnect(); // reuse created connection. no Modal will show\r\n          }\r\n        }else{\r\n          if(window.ethereum){\r\n            this.initialConnect(); // trust/metamask\r\n          }\r\n        }\r\n      }catch{ \r\n  \r\n      }\r\n  }\r\n\r\n  componentWillUnmount = () => { \r\n\r\n  }\r\n\r\n  componentWillReceiveProps(props: ConnectButtonProps) { \r\n\r\n\r\n  }\r\n\r\n  initialConnect_WalletConnect = async () => {\r\n\r\n    if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n      this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      return;\r\n    }else{\r\n      this.setState({networkWarning: ``});\r\n    }\r\n\r\n    //  Create WalletConnect Provider\r\n    window.walletConnectProvider = new WalletConnectProvider({\r\n      infuraId: \"4795165df6dddd069cb3064c91713649\", // Required\r\n      chainId: window.chainIdExpected, // \r\n      rpc: {\r\n        97: \"https://data-seed-prebsc-1-s1.binance.org:8545\", // bsc testnet\r\n        56: \"https://bsc-dataseed.binance.org/\" // bsc mainnet\r\n      }/*,\r\n      qrcodeModalOptions: {\r\n        mobileLinks: [\r\n          \"encrypted ink\"\r\n        ],\r\n        desktopLinks: [\r\n          \"encrypted ink\"\r\n        ]\r\n      }*/\r\n    });\r\n    //  Enable session (triggers QR Code modal)\r\n    try{\r\n\r\n      await window.walletConnectProvider.enable();    \r\n\r\n      window.web3 = new Web3(window.walletConnectProvider as any);\r\n\r\n      const accounts = await window.web3.eth.getAccounts();\r\n      if(accounts.length > 0) {\r\n        window.connected = true;\r\n        this.setState({connected: true});\r\n        window.walletAddress = accounts[0];\r\n        this.handleConnectWallet_WalletConnect();\r\n      }\r\n    }catch{\r\n      console.log(\"error on walletconnect\");\r\n    }\r\n\r\n  }\r\n\r\n  initialConnect = () => {\r\n    if (window.ethereum) {\r\n\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n        return;\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((res: string[]) => {\r\n          if (res.length >= 1) {\r\n            window.connected = true;\r\n            this.setState({connected: true});\r\n            window.walletAddress = res[0];\r\n            this.handleConnectWallet();\r\n          }\r\n        });\r\n    } else if (\r\n      window.confirm(\r\n        \"You have to use MetaMask or TrustWallet to connect. Press OK to continue to the MetaMask download page. https://metamask.io/download\"\r\n      )\r\n    ) {\r\n      let a = document.createElement(\"a\");\r\n      a.target = \"_blank\";\r\n      a.href = \"https://metamask.io/download\";\r\n      a.click();\r\n    }\r\n  }\r\n\r\n  handleConnectWallet = () => {\r\n\r\n    if(window.ethereum){\r\n      window.web3 = new Web3(window.ethereum);\r\n\r\n      window.chainId = window.ethereum.networkVersion;\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      window.ethereum.request({ method: \"eth_accounts\" }).then((res: any) => {\r\n        if (res.length >= 1) {\r\n          window.connected = true;\r\n          this.setState({connected: true});\r\n          window.walletAddress = res[0];\r\n          this.updateRefLink();\r\n          //console.log(\"eth_accounts\", res);\r\n          this.forceUpdate();\r\n\r\n          window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n        }\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  handleConnectWallet_WalletConnect = async () => {\r\n\r\n    if(window.walletConnectProvider){\r\n      //window.web3 = new Web3(window.walletConnectProvider);\r\n      window.chainId = window.walletConnectProvider.chainId;\r\n      if(window.chainId > 0 && window.chainIdExpected != window.chainId){\r\n        this.setState({networkWarning: `network ${window.chainId} not supported.`});\r\n      }else{\r\n        this.setState({networkWarning: ``});\r\n      }\r\n\r\n      const accounts = await window.web3.eth.getAccounts();\r\n      if(accounts.length > 0) {\r\n        window.connected = true;\r\n        this.setState({connected: true});\r\n        window.walletAddress = accounts[0];\r\n        this.updateRefLink();\r\n        this.forceUpdate();\r\n\r\n        window.farm_contract = (new window.web3.eth.Contract(window.contract_abi, window.contractAddress) as unknown) as ContractContext;\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  handleDeactivateAccount = () => {\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    this.setState({networkWarning: ``});\r\n    this.setState({connected: false});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  handleDeactivateAccount_WalletConnect = () => {\r\n    window.walletConnectProvider.disconnect();\r\n    window.connected = false;\r\n    window.walletAddress = \"\";\r\n    window.chainId = 0;\r\n    localStorage.setItem(\"walletconnect\", \"\");\r\n    this.setState({networkWarning: ``});\r\n    this.setState({connected: false});\r\n    this.forceUpdate();\r\n  }\r\n\r\n  updateRefLink = () => {\r\n    let refLinkWalledId = document.getElementById(\"walletAddressRefLink\");\r\n    if(refLinkWalledId != null){\r\n      refLinkWalledId.innerText = window.walletAddress;\r\n    }\r\n  }\r\n\r\n  handleWalletConnectDlgSelection = (selection: string) => {\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: false\r\n    });\r\n\r\n    switch(selection){\r\n      case \"metamask\":\r\n      case \"trustwallet\":\r\n        this.initialConnect();\r\n      break;\r\n\r\n      case \"walletconnect\":\r\n        this.initialConnect_WalletConnect();\r\n      break;\r\n    }\r\n  }\r\n\r\n  handleWalletConnectDlgClose = () => {\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: false\r\n    });\r\n  }\r\n\r\n  onClick_connect = () => {\r\n\r\n    this.setState({\r\n      WalletConnectSelectionDlgOpen: true\r\n    });\r\n\r\n    //initialConnect_WalletConnect\r\n  }\r\n\r\n  onClick_disconnect = () => {\r\n    try{\r\n      this.handleDeactivateAccount_WalletConnect();\r\n    }catch{\r\n\r\n    }\r\n\r\n    try{\r\n      this.handleDeactivateAccount();\r\n    }catch{\r\n\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n\r\n    let button;\r\n    if (this.state.connected) { \r\n      button = <Button fullWidth={true} variant={\"contained\"} color={\"secondary\"} sx={{my: 0, marginRight: 0 }} size=\"small\" onClick={this.onClick_disconnect}><PowerOffIcon style={{height: \"20px\", marginRight: \"8px\"}}></PowerOffIcon>disconnect</Button>;    \r\n    } else {\r\n      button = <Button fullWidth={true} variant={\"contained\"} color={\"primary\"} sx={{my: 0, marginRight: 0 }} size=\"small\" onClick={this.onClick_connect}><PowerIcon style={{height: \"20px\", marginRight: \"8px\"}}></PowerIcon>connect</Button>;  \r\n    }\r\n\r\n    let walletConnectPreSelectDlg =    <Dialog onClose={this.handleWalletConnectDlgClose} open={this.state.WalletConnectSelectionDlgOpen}>\r\n      <List sx={{ p: \"32px\" }}>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('metamask')}>\r\n          <ListItemAvatar>\r\n              <img src={metamaskLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"Metamask\" />\r\n        </ListItem>\r\n        <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('trustwallet')}>\r\n            <ListItemAvatar>\r\n              <img src={trustwalletLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"Trust Wallet\" />\r\n        </ListItem>\r\n{/*         <ListItem autoFocus button onClick={() => this.handleWalletConnectDlgSelection('walletconnect')}>\r\n            <ListItemAvatar>\r\n              <img src={walletConnectLogo} style={{width: \"40px\"}} />\r\n            </ListItemAvatar>\r\n          <ListItemText primaryTypographyProps={{fontSize: \"24pt\"}} primary=\"WalletConnect\" />\r\n        </ListItem> */}\r\n      </List>\r\n    </Dialog>;\r\n\r\n    return (\r\n      <Box>\r\n        {this.state.networkWarning}\r\n        <Grid container>\r\n          <Grid item xs={12} md={12}>\r\n            {button}\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <div style={{padding: \"16px\"}}>\r\n              {this.state.connected && window.walletAddress &&\r\n                `${window.walletAddress.slice(0, 6)}...${window.walletAddress.slice(\r\n                  window.walletAddress.length - 4,\r\n                  window.walletAddress.length\r\n                )}`}\r\n                \r\n            </div>\r\n          </Grid>\r\n\r\n          \r\n        </Grid>\r\n        {walletConnectPreSelectDlg}\r\n      </Box>\r\n      );\r\n    \r\n  }\r\n}\r\n\r\nexport default ConnectButton;","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, CircularProgress, Grid, LinearProgress, Typography } from '@mui/material';\r\nimport { StandardTextFieldProps, TextField } from '@mui/material';\r\n\r\n\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { AbiItem, TransactionReceipt } from 'ethereum-abi-types-generator';\r\n\r\nimport {ContractContext} from './assets/abi/voting-contract';\r\nimport Web3 from \"web3\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport copy from 'clipboard-copy';\r\nimport { formatEthFromWei, formatNumber } from './Formatters';\r\n\r\n//  Global setup Web3 Contract-Interaction\r\n//\r\nimport abi from \"./assets/abi/voting-contract.json\";\r\nimport TopAppBar from './components/AppBar';\r\nimport ConnectButton from './components/ConnectButton';\r\n\r\nimport taxMeterImg from './assets/img/tax-meter.png'\r\nimport {ReactComponent as TelegramIcon} from './assets/img/Telegram_logo.svg';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\n\r\n\r\nconst contractAddress: string = '0x22d331f76Aa4044f1680D0395A87610EA58e0B37'; // release on testnet\r\n\r\n//window.chainIdExpected = 97;\r\nwindow.chainIdExpected = 56;\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    dataRefreshInterval: number,\r\n    farm_contract: ContractContext;\r\n    web3: Web3;\r\n    walletConnectProvider: WalletConnectProvider,\r\n    ethereum: any;\r\n    contractAddress: string;\r\n    contract_abi: AbiItem[];\r\n    walletAddress: string;\r\n    connected: boolean;\r\n    refferalAddress: string; // the ref address that invited me\r\n    chainId: number;\r\n    chainIdExpected: number;\r\n    bnbPrice: number;\r\n  }\r\n}\r\n\r\ninterface AppProps {\r\n  style?: React.CSSProperties;\r\n}\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.h3,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nwindow.dataRefreshInterval = 3000;\r\n\r\nclass App extends React.Component<AppProps> {\r\n  \r\n  state = {\r\n    radioValue: \"\",\r\n    progress: false,\r\n    contractBalance: 0,\r\n    alreadyClaimed: 0,\r\n    voterBalance: 0,\r\n    lastAction: 0,\r\n    lastActionTxt: \"\",\r\n    claimButtonDisabled: false,\r\n    lastClaimMinutesAgo: 0,\r\n    claimButtonDisabledBecauseCooldown: false\r\n  }\r\n\r\n  baseState: any;\r\n  _stateInterval: any;\r\n\r\n  constructor(props: AppProps) {\r\n    super(props);\r\n\r\n    this.baseState = this.state;\r\n    // properties\r\n\r\n\r\n  }\r\n\r\n\r\n  componentDidMount = () => { \r\n    window.contractAddress = contractAddress;\r\n    window.contract_abi = abi as AbiItem[];\r\n\r\n\r\n    this.checkState();\r\n\r\n    if(this._stateInterval){\r\n      clearInterval(this._stateInterval);\r\n    }\r\n    this._stateInterval = setInterval(this.checkState, window.dataRefreshInterval);\r\n\r\n    //this.setModalOpen();\r\n  }\r\n\r\n\r\n  componentWillUnmount = () => { \r\n    \r\n  }\r\n\r\n  \r\n  checkState = () => {  \r\n\r\n    if(window.connected !== true){\r\n      this.setState(this.baseState);\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      yourAddress: window.walletAddress,\r\n    });\r\n\r\n    try{\r\n      window.farm_contract.methods.getContractBalance().call().then((result: string) => {\r\n        //console.log(result);\r\n        this.setState({\r\n          contractBalance: Web3.utils.fromWei(result)\r\n        });\r\n\r\n        window.farm_contract.methods.voterBalances(window.walletAddress).call().then((result: string) => {\r\n          //console.log(result);\r\n          this.setState({\r\n            voterBalance: Web3.utils.fromWei(result)\r\n          });\r\n\r\n          window.farm_contract.methods.lastAction(window.walletAddress).call().then((result: string) => {\r\n            //console.log(result);\r\n            let lastActionTxt = \"\";\r\n            if( result == \"0\"){\r\n              lastActionTxt = \"never\";\r\n            }else{\r\n              let lastClaimDate = new Date(parseInt(result) * 1000);\r\n              let now = new Date();\r\n              let lastClaimMinutesAgo = ( ( now.getTime() - lastClaimDate.getTime() ) / 1000 / 60);\r\n\r\n              this.setState({\r\n                lastClaimMinutesAgo: lastClaimMinutesAgo\r\n              });\r\n\r\n              if(lastClaimMinutesAgo > 60*24 ){\r\n                this.setState({\r\n                  claimButtonDisabledBecauseCooldown: false\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  claimButtonDisabledBecauseCooldown: true\r\n                });\r\n              }\r\n\r\n              lastActionTxt = ( ( now.getTime() - lastClaimDate.getTime() ) / 1000 / 60 / 60).toFixed(1) + \" h ago\";\r\n            }\r\n            this.setState({\r\n              lastAction: result,\r\n              lastActionTxt: lastActionTxt\r\n            });\r\n\r\n            \r\n\r\n            if(this.state.voterBalance > 0 && this.state.contractBalance > 0){\r\n              this.setState({\r\n                claimButtonDisabled: false\r\n              });\r\n            }else{\r\n              this.setState({\r\n                claimButtonDisabled: true\r\n              });\r\n            }\r\n          }).catch((err:any) => {\r\n            console.log(\"error on reading lastAction\", err);\r\n          });\r\n\r\n        });\r\n\r\n      }).catch((err:any) => {\r\n        console.log(\"error on reading contract balance\", err);\r\n      });\r\n\r\n      window.farm_contract.methods.voterClaims(window.walletAddress).call().then((result: string) => {\r\n        //console.log(result);\r\n        this.setState({\r\n          alreadyClaimed: Web3.utils.fromWei(result)\r\n        });\r\n      }).catch((err:any) => {\r\n        console.log(\"error on reading voterClaims\", err);\r\n      });\r\n\r\n\r\n\r\n    \r\n  }catch(ex){\r\n    console.log(\"error\", ex);\r\n  }\r\n\r\n\r\n  }\r\n\r\n  onClick_Submit = () => {\r\n    //alert(this.state.radioValue)\r\n    let openValue = \"\";\r\n    if(this.state.radioValue.toLowerCase() == \"op1\"){\r\n      openValue = \"1\";\r\n    }else if(this.state.radioValue.toLowerCase() == \"op2\"){\r\n      openValue = \"2\";\r\n    }\r\n\r\n    this.setState({\r\n      progress: true,\r\n      claimButtonDisabled: true\r\n    });\r\n\r\n    window.farm_contract.methods.claim().send({from: window.walletAddress}).then((response) => {\r\n      this.setState({\r\n        progress: false,\r\n        claimButtonDisabled: false\r\n      });\r\n    }).catch((err:any) => {\r\n      alert(\"transaction failed\");\r\n      this.setState({\r\n        progress: false,\r\n        claimButtonDisabled: false\r\n      });\r\n    });\r\n  }\r\n\r\n  onClick_AddMe = () => {\r\n    //alert(this.state.radioValue)\r\n    let openValue = \"\";\r\n    if(this.state.radioValue.toLowerCase() == \"op1\"){\r\n      openValue = \"1\";\r\n    }else if(this.state.radioValue.toLowerCase() == \"op2\"){\r\n      openValue = \"2\";\r\n    }\r\n\r\n    this.setState({\r\n      progress: true\r\n    });\r\n\r\n    window.farm_contract.methods.setVoterBalances([window.walletAddress],[Web3.utils.toWei(\"36\")]).send({from: window.walletAddress}).then((response) => {\r\n      this.setState({\r\n        progress: false\r\n      });\r\n    }).catch((err:any) => {\r\n      alert(\"transaction failed\");\r\n      this.setState({\r\n        progress: false\r\n      });\r\n    });\r\n  }\r\n\r\n  handleRadioChange = (event: any, _value: string) => {\r\n    this.setState({\r\n      radioValue: _value\r\n    })\r\n  }\r\n\r\n  //  Main Layout\r\n  //\r\n  render = () => {\r\n    return (\r\n      <div>\r\n      <div className={\"wrapper\"}>\r\n     <img className={\"logo\"} src={\"https://piston-token.com/images/logo.svg\"}/>\r\n    <h2>PISTON TOKEN</h2>\r\n    <h3>FINAL CLAIM</h3>\r\n\r\n    <div style={{display:(window.connected == true)?\"\":\"none\"}}>\r\n\r\n        <div><b>claim pool balance:</b> {this.state.contractBalance} USDT</div>\r\n        <br/>\r\n        <div><b>my claimed amount:</b> {this.state.alreadyClaimed} USDT</div>\r\n        <div><b>my last claim:</b> {this.state.lastActionTxt}</div>\r\n\r\n\r\n          <Button disabled={this.state.claimButtonDisabled || this.state.claimButtonDisabledBecauseCooldown} fullWidth={true} variant={\"contained\"} color={\"primary\"} sx={{my: 0, marginTop: \"32px\" }} size=\"large\" onClick={this.onClick_Submit}><SendIcon style={{height: \"20px\", marginRight: \"8px\"}}></SendIcon>claim</Button>\r\n\r\n\r\n    </div>\r\n\r\n    <div style={{display:(window.connected == true && this.state.voterBalance == 0)?\"\":\"none\", border: \"1px solid white\", borderRadius: \"10px\"}}>\r\n      <div className={\"errormsgMain\"}>Your wallet is not eligible</div>\r\n    </div>\r\n\r\n\r\n    <div style={{marginTop: \"24px\"}}>\r\n      <ConnectButton />\r\n    </div>\r\n  </div>\r\n  <a id=\"details\"></a>\r\n      <div className={\"wrapper left\"} style={{marginTop: \"16px\"}}>\r\n      11th November<br/><br/>\r\n      Greetings all! The time is finally here! 🤘🏼<br/>\r\nAs you all know, PSTN unfortunately came to an end. We ran a vote many months ago, and 81% of the community decided to invest the little liquidity that remained to gain profits and hopefully start giving back to all those that did not receive their original investment back. \r\n<br/><br/>\r\nOur first investment did not go well but we didn’t give up. A new opportunity arose, at a lower % but much safer so we decided to go with it and from there we’ve been doing very well.\r\nPlease remember that this is unprecedented, no other projects have done something like this, and we are proud to finally be at a stage where we can give back.\r\n<br/><br/>\r\nA new dapp has been created from which you will be able to withdraw 20 USDT per day per wallet (only whitelisted wallets of course). Users will be able to do this until the claim pool reaches zero. We will continue to fill the pool ideally twice a month in increments of $500 for the foreseeable future. \r\n<br/><br/>\r\nThe target is to increase the injections with time as our investment continues to compound and grow.\r\n\r\n      </div>\r\n{/*       <div className={\"wrapper left\"} style={{marginTop: \"16px\"}}>\r\n        TESNET TOOLS\r\n        <Button fullWidth={true} variant={\"contained\"} color={\"primary\"} sx={{my: 0, marginTop: \"32px\" }} size=\"large\" onClick={this.onClick_AddMe}><SendIcon style={{height: \"20px\", marginRight: \"8px\"}}></SendIcon>add me to the list (with 100 USDT)</Button>\r\n\r\n      </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport amber from '@mui/material/colors/amber'\r\n\r\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n    primary: {\r\n      main: '#FFFFFF',\r\n    },\r\n    secondary: {\r\n      main: '#193d7d',\r\n    },\r\n    background: {\r\n      default: \"#FFFFFF\"\r\n    }\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}